---

# Merge variables
- name: load custom alert
  include_vars:
    file={{ playbook_dir }}/conf/ds/alert.yml name=alert_custom

- name: load custom api
  include_vars:
    file={{ playbook_dir }}/conf/ds/api.yml name=api_custom

- name: load custom common
  include_vars:
    file={{ playbook_dir }}/conf/ds/common.yml name=common_custom

- name: load custom datasource
  include_vars:
    file={{ playbook_dir }}/conf/ds/datasource.yml name=datasource_custom

- name: load custom master
  include_vars:
    file={{ playbook_dir }}/conf/ds/master.yml name=master_custom

- name: load custom worker
  include_vars:
    file={{ playbook_dir }}/conf/ds/worker.yml name=worker_custom

- name: load custom quartz
  include_vars:
    file={{ playbook_dir }}/conf/ds/quartz.yml name=quartz_custom

- name: load custom zookeeper
  include_vars:
    file={{ playbook_dir }}/conf/ds/zookeeper.yml name=zookeeper_custom

- name: load default config
  include_vars: file=default.yml name=conf_default

- name: combine config
  set_fact:
    alert_conf: "{{ {} | with_default_dicts(alert_custom, conf_default) | update_default_dicts }}"
    api_conf: "{{ {} | with_default_dicts(api_custom, conf_default) | update_default_dicts }}"
    common_conf: "{{ {} | with_default_dicts(common_custom, conf_default) | update_default_dicts }}"
    datasource_conf: "{{ {} | with_default_dicts(datasource_custom, conf_default) | update_default_dicts }}"
    master_conf: "{{ {} | with_default_dicts(master_custom, conf_default) | update_default_dicts }}"
    worker_conf: "{{ {} | with_default_dicts(worker_custom, conf_default) | update_default_dicts }}"
    quartz_conf: "{{ {} | with_default_dicts(quartz_custom, conf_default) | update_default_dicts }}"
    zookeeper_conf: "{{ {} | with_default_dicts(zookeeper_custom, conf_default) | update_default_dicts }}"

# Distributing files to the cluster.
- name: delete related folders
  file: name={{ item }} state=absent
  with_items:
    - "{{ ds_dir }}"

- name: create related folders
  file: name={{ item }} state=directory mode=755 recurse=yes
  with_items:
    - "{{ ds_dir }}"

- name: install
  unarchive:
    src={{ gz_dir }}/ds-{{ ds_version }}.tar.gz
    dest={{ deploy_dir }}
    mode=755

# Replace configuration file.
#- name: copy zk del shell
#  template: src=del_zk_node.sh.j2 dest={{ ds_dir }}/bin/del_zk_node.sh mode=755

- name: copy alert.properties
  template: src=alert.properties.j2 dest={{ ds_dir }}/conf/alert.properties mode=755

- name: copy application-api.properties
  template: src=application-api.properties.j2 dest={{ ds_dir }}/conf/application-api.properties mode=755

- name: copy common.properties
  template: src=common.properties.j2 dest={{ ds_dir }}/conf/common.properties mode=755

- name: copy datasource.properties
  template: src=datasource.properties.j2 dest={{ ds_dir }}/conf/datasource.properties mode=755

- name: copy master.properties
  template: src=master.properties.j2 dest={{ ds_dir }}/conf/master.properties mode=755

- name: copy worker.properties
  template: src=worker.properties.j2 dest={{ ds_dir }}/conf/worker.properties mode=755

- name: copy quartz.properties
  template: src=quartz.properties.j2 dest={{ ds_dir }}/conf/quartz.properties mode=755

- name: copy zookeeper.properties
  template: src=zookeeper.properties.j2 dest={{ ds_dir }}/conf/zookeeper.properties mode=755

- name: copy install_config.conf
  template: src=install_config.conf.j2 dest={{ ds_dir }}/conf/config/install_config.conf mode=755

- name: copy dolphinscheduler_env.sh
  template: src=dolphinscheduler_env.sh.j2 dest={{ ds_dir }}/conf/env/dolphinscheduler_env.sh.conf mode=755


- name: copy mysql client
  copy:
    src="{{ gz_dir }}/mysql-connector-java-5.1.48.jar"
    dest={{ ds_dir }}/lib/mysql-connector-java-5.1.48.jar

- name: add an environment variable patch for startup
  shell: sed -i 'N;2a source ~/.bash_profile && source /etc/profile' {{ ds_dir }}/bin/dolphinscheduler-daemon.sh

- name: change daemon java home
  shell: sed -i 'N;3a export JAVA_HOME={{ java_home }}' {{ ds_dir }}/bin/dolphinscheduler-daemon.sh

- name: change zk java home
  shell: sed -i 'N;3a export JAVA_HOME={{ java_home }}' {{ ds_dir }}/script/remove-zk-node.sh
